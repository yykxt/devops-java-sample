name: Java CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: Build with Maven
      run: mvn -B clean package --file pom.xml
      
    - name: Run tests
      run: mvn test --file pom.xml
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: target/surefire-reports/

  build-and-push-image:
    needs: build-and-test
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: Build application
      run: mvn -B clean package --file pom.xml
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: yourusername/your-java-app
        tags: |
          type=ref,event=branch
          type=sha,format=short
          type=raw,value=latest,enable={{is_default_branch}}
          
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  update-deployment-config:
    needs: build-and-push-image
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout deployment repository
      uses: actions/checkout@v4
      with:
        repository: yourusername/your-deployment-repo
        token: ${{ secrets.DEPLOYMENT_REPO_TOKEN }}
        path: deployment-repo
        
    - name: Determine environment
      id: env
      run: |
        if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
          echo "ENVIRONMENT=production" >> $GITHUB_OUTPUT
        else
          echo "ENVIRONMENT=staging" >> $GITHUB_OUTPUT
        fi
        
    - name: Update image tag in deployment config
      run: |
        # 提取短SHA作为镜像标签
        IMAGE_TAG=${{ github.sha }}
        IMAGE_TAG=${IMAGE_TAG:0:7}
        
        # 更新Kubernetes部署文件中的镜像标签
        cd deployment-repo
        yq eval ".spec.template.spec.containers[0].image = \"yourusername/your-java-app:$IMAGE_TAG\"" -i environments/${{ steps.env.outputs.ENVIRONMENT }}/java-app/deployment.yaml
        
    - name: Commit and push changes
      run: |
        cd deployment-repo
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git add .
        git commit -m "Update Java app image to ${{ github.sha }}"
        git push
